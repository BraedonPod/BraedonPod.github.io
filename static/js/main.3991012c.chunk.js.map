{"version":3,"sources":["App.js","components/api/earthquake.js","components/constants.js","components/earthquake/Map/Marker.js","components/earthquake/Map/QuakeMap.js","components/earthquake/Chart/Chart.js","components/earthquake/Statistics/Statistics.js","components/earthquake/Map/Picker.js","components/earthquake/Cards/Cards.js","components/earthquake/Index.js","components/covid/Cards/Cards.js","components/api/covid.js","components/covid/Chart/Chart.js","components/covid/CountryPicker/CountryPicker.js","components/covid/ByCountry/ByCountry.js","components/covid/Index.js","components/about/Index.js","components/contact/Index.js","Testapp.js","components/layout/Navbar.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","color","backgroundColor","textAlign","marginLeft","marginRight","marginTop","padding","typography","marginBottom","App","classes","className","Card","CardHeader","title","subheader","Divider","CardContent","Typography","variant","component","fetchData","timeset","a","changeableUrl","axios","get","features","data","modifiedData","map","id","coordinates","geometry","properties","time","moment","format","mag","place","fetchDailyData","fontSize","pos","card","boxShadow","cardHeader","width","h3","gridAlign","pAlign","display","verticalAlign","alignItems","Marker","quake","index","placeArray","split","placeArraySplit","countryName","length","trim","CircleMarker","center","radius","Popup","Grid","container","spacing","item","xs","QuakeMap","mapData","mapSelector","useState","earthquakes","setEarthquakes","position","zoom","useEffect","fetchAPI","handleClick","e","latlng","lat","lng","console","log","defaultMap","Map","minZoom","worldCopyJump","onclick","TileLayer","url","CircularProgress","selectedMap","Chart","magData","forEach","m","horizontalBarChart","labels","datasets","label","options","legend","text","lineChart","borderColor","fill","md","Statistics","dataSource","x","theme","formControl","select","margin","paddingLeft","option","Picker","handleMapChange","FormControl","NativeSelect","defaultValue","onChange","target","value","total","borderBottom","smallMag","coords","Cards","undefined","sort","b","justify","cx","gutterBottom","start","end","duration","separator","decimals","onClick","Index","state","dailyData","mapPos","fetchedData","setState","handleMapPos","fetchedDailyData","this","Component","infected","recovered","deaths","confirmed","lastUpdate","Date","toDateString","toFixed","country","positive","death","date","dateChecked","fetchCountries","countries","name","fetchSummary","Countries","Country","CountryCode","TotalConfirmed","TotalDeaths","TotalRecovered","Slug","justifyContent","setDailyData","add","barChart","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","i","ByCountry","p","Link","href","form","button","noValidate","autoComplete","TextField","Button","endIcon","Testapp","flexGrow","menuButton","appBar","fontFamily","list","fullList","divider","listItem","navitems","link","textDecoration","listLink","active","Navbar","React","left","toggleDrawer","anchor","open","event","type","key","role","onKeyDown","List","ListItem","ListItemText","primary","exact","to","activeClassName","ListItemIcon","AppBar","Toolbar","Fragment","Drawer","onClose","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.3991012c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: '50%',\n      '@media (max-width: 768px)': {\n        maxWidth: '90%',\n      },\n      color: 'white',\n      backgroundColor: '#1a2430',\n      textAlign: 'center',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: 100,\n      padding: 20,\n    },\n    typography: {\n        marginBottom: 13,\n    },\n  });\n\nfunction App() {\n    const classes = useStyles();\n\n    return (\n        <>\n          <div className=\"container\">\n              <Card className={classes.root}>\n                  <CardHeader title=\"Home\"  subheader=\"Earthquakes / Covid / And many more!\" />\n                  <Divider />\n                  <CardContent>\n                      <Typography variant=\"body2\" component=\"p\" className={classes.typography}>\n                          Welcome to the danger dashboard!\n                      </Typography>\n                      <Typography variant=\"body2\" component=\"p\" className={classes.typography}>\n                          This site has data regarding earthquakes and covid worldwide!\n                      </Typography>\n                  </CardContent>\n              </Card>\n          </div>\n        </>\n    )\n}\n\nexport default App\n","import axios from 'axios';\r\nimport moment from 'moment';\r\nimport { BASEAPI, HOURLYAPI, DAILYAPI, WEEKLYAPI, MONTHLYAPI } from '../constants';\r\n\r\nexport const fetchData = async (timeset) => {\r\n    let changeableUrl = BASEAPI + timeset + \".geojson\";\r\n    try {\r\n        const { data: {features} } = await axios.get(`${changeableUrl}`);\r\n        const modifiedData = features.map((data) => ({\r\n            id: data.id,\r\n            coordinates: data.geometry.coordinates,\r\n            title: data.properties.title,\r\n            time: moment(data.properties.time).format(\"MMMM Do YYYY, h:mm:ss a\"),\r\n            mag: data.properties.mag,\r\n            place: data.properties.place,\r\n        }));\r\n        return modifiedData;\r\n    } catch(error) {}\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data: {features} } = await axios.get(`${DAILYAPI}`);\r\n        const modifiedData = features.map((data) => ({\r\n            id: data.id,\r\n            coordinates: data.geometry.coordinates,\r\n            title: data.properties.title,\r\n            time: moment(data.properties.time).format(\"MMMM Do YYYY, h:mm:ss a\"),\r\n            mag: data.properties.mag,\r\n            place: data.properties.place,\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\nexport const fetchWeeklyData = async () => {\r\n    try {\r\n        const { data: {features} } = await axios.get(`${WEEKLYAPI}`);\r\n        const modifiedData = features.map((data) => ({\r\n            id: data.id,\r\n            coordinates: data.geometry.coordinates,\r\n            title: data.properties.title,\r\n            time: moment(data.properties.time).format(\"MMMM Do YYYY, h:mm:ss a\"),\r\n            mag: data.properties.mag,\r\n            place: data.properties.place,\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchHourlyData = async () => {\r\n    try {\r\n        const { data: {features} } = await axios.get(`${HOURLYAPI}`);\r\n        const modifiedData = features.map((data) => ({\r\n            id: data.id,\r\n            coordinates: data.geometry.coordinates,\r\n            title: data.properties.title,\r\n            time: moment(data.properties.time).format(\"MMMM Do YYYY, h:mm:ss a\"),\r\n            mag: data.properties.mag,\r\n            place: data.properties.place,\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchMonthlyData = async () => {\r\n    try {\r\n        const { data: {features} } = await axios.get(`${MONTHLYAPI}`);\r\n        const modifiedData = features.map((data) => ({\r\n            id: data.id,\r\n            coordinates: data.geometry.coordinates,\r\n            title: data.properties.title,\r\n            time: moment(data.properties.time).format(\"MMMM Do YYYY, h:mm:ss a\"),\r\n            mag: data.properties.mag,\r\n            place: data.properties.place,\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}","//Covid\r\nexport const COVIDAPI = 'https://covid19.mathdro.id/api';\r\nexport const DAILYUSAPI = 'https://api.covidtracking.com/v1/us/daily.json';\r\n\r\n\r\n\r\n//Earthquake\r\nexport const BASEAPI = \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/\";\r\nexport const HOURLYAPI = \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.geojson\";\r\nexport const DAILYAPI = \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojson\";\r\nexport const WEEKLYAPI = \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.geojson\";\r\nexport const MONTHLYAPI = \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson\";","import React from 'react'\r\nimport { CircleMarker, Popup  } from 'react-leaflet';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport KeyboardTabIcon from '@material-ui/icons/KeyboardTab';\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    card: {\r\n        boxShadow: 'none !important',\r\n    },\r\n    cardHeader: {\r\n        padding: 0,\r\n    },\r\n    CardContent: {\r\n        padding: 0,\r\n        width: 250\r\n    },\r\n    h3: {\r\n        marginBottom: 0,\r\n    },\r\n    gridAlign: {\r\n        textAlign: 'center',\r\n    },\r\n    pAlign: {\r\n        display: 'flex',\r\n        verticalAlign: 'middle',\r\n        alignItems: 'center',\r\n    },\r\n  });\r\n\r\nfunction Marker({quake, index}) {\r\n    const classes = useStyles();\r\n    let color = \"\";\r\n\r\n    if(quake.mag < 2){color = \"green\";} \r\n    else if (quake.mag > 4) {color = \"red\";} \r\n    else {color = \"blue\";}\r\n\r\n    let placeArray = quake.place.split(\",\")\r\n    let placeArraySplit  = placeArray[0].split(\"of\");\r\n    let countryName = placeArray[placeArray.length -1].trim();\r\n\r\n    return (\r\n        <CircleMarker key={index} center={[quake.coordinates[1], quake.coordinates[0]]} color={color} radius={quake.mag*2}>\r\n            <Popup>\r\n                <Card className={classes.card}>\r\n                    <CardContent className={classes.CardContent}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={8}>\r\n                                <CardHeader title={countryName} subheader={placeArraySplit[1]} className={classes.cardHeader} />\r\n                            </Grid>\r\n                            <Grid item xs={4} className={classes.gridAlign}>\r\n                                <h3 className={classes.h3}>{quake.mag}</h3>\r\n                                <small>Richter Scale</small>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography variant=\"body2\" component=\"span\" className={classes.pAlign}>\r\n                                    <LocationOnIcon /><p>Location</p>\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" component=\"small\">\r\n                                    {quake.coordinates[1]}, {quake.coordinates[0]}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography variant=\"body2\" component=\"span\" className={classes.pAlign}>\r\n                                    <KeyboardTabIcon /><p>Distance</p>\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" component=\"small\">\r\n                                    {placeArraySplit[0]}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <Typography variant=\"body2\" component=\"span\" className={classes.pAlign}>\r\n                                    <ScheduleIcon /><p>Time</p>\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" component=\"small\">\r\n                                    {quake.time}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </Popup>\r\n        </CircleMarker>\r\n    )\r\n}\r\n\r\nexport default Marker\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Map, TileLayer } from 'react-leaflet';\r\nimport { fetchDailyData } from '../../api/earthquake';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Marker from './Marker';\r\nimport './leaflet.css';\r\n\r\nfunction QuakeMap({mapData, mapSelector, pos}) {\r\n    const [earthquakes, setEarthquakes] = useState([]);\r\n    let position = [0, 0];\r\n    let zoom = 2;\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setEarthquakes(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    if(pos.length !== 0){zoom = 10; position = pos;}\r\n\r\n    const handleClick = (e) => {\r\n        const { lat, lng } = e.latlng;\r\n        console.log(lat, lng);\r\n    }\r\n    const defaultMap = (        \r\n        earthquakes.length ? (\r\n            <Map center={position} zoom={zoom} minZoom={2} worldCopyJump={true} onclick={handleClick}>\r\n                <TileLayer\r\n                    //url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"\r\n                />\r\n                {earthquakes.map((quake, index) => (\r\n                    <Marker key={index} quake={quake} index={index} />\r\n                ))}\r\n            </Map>   \r\n        ) : <CircularProgress />\r\n    );\r\n\r\n    const selectedMap = (\r\n        mapData.length ? (\r\n            <Map  center={position} zoom={zoom} minZoom={2} worldCopyJump={true} onclick={handleClick}>\r\n                <TileLayer\r\n                    url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"\r\n                />\r\n                {mapData.map((quake, index) => (\r\n                    <Marker key={index} quake={quake} index={index} />\r\n                ))}\r\n            </Map>   \r\n        ) : <CircularProgress />\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {mapSelector ? selectedMap : defaultMap }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuakeMap\r\n","import React from 'react';\r\nimport { HorizontalBar, Line } from 'react-chartjs-2';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst Chart = ({ mag }) => {\r\n    const magData = [];\r\n    mag.forEach((m) => {\r\n        if(m<2){magData[0] = !magData[0] ? 1 : magData[0]+1}\r\n        if(m>2 && m<3){magData[1] = !magData[1] ? 1 : magData[1]+1}\r\n        if(m>=3 && m<4){magData[2] = !magData[2] ? 1 : magData[2]+1}\r\n        if(m>=4 && m<5){magData[3] = !magData[3] ? 1 : magData[3]+1}\r\n        if(m>=5 && m<6){magData[4] = !magData[4] ? 1 : magData[4]+1}\r\n        if(m>=6 && m<7){magData[5] = !magData[5] ? 1 : magData[5]+1}\r\n        if(m>=7 && m<8){magData[6] = !magData[6] ? 1 : magData[6]+1}\r\n        if(m>=8){magData[7] = !magData[7] ? 1 : magData[7]+1}\r\n    })\r\n\r\n    const horizontalBarChart = (\r\n        magData.length\r\n        ? (\r\n            <HorizontalBar\r\n                data={{\r\n                    labels: ['Less than 2', '2', '3', '4', '5', '6', '7', '8'],\r\n                    datasets: [{\r\n                        label: 'Magnitude',\r\n                        backgroundColor: [\r\n                            'rgba(109, 204, 178, 0.5)',\r\n                            'rgba(102, 209, 126, 0.5)',\r\n                            'rgba(148, 208, 103, 0.5)',\r\n                            'rgba(192, 202, 87, 0.5)',\r\n                            'rgba(203, 181, 99, 0.5)',\r\n                            'rgba(199, 147, 75, 0.5)',\r\n                            'rgba(199, 102, 45, 0.5)',\r\n                            'rgba(205, 7, 0, 0.5)'\r\n                        ],\r\n                        data: [magData[0], magData[1], magData[2], magData[3], magData[4], magData[5], magData[6],magData[7]]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: \"Magnitude breakdown\" },\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    const lineChart = (\r\n        magData.length\r\n        ? (\r\n            <Line\r\n                data={{\r\n                    labels: ['Less than 2', '2', '3', '4', '5', '6', '7', '8'],\r\n                    datasets: [{\r\n                        label: 'Magnitude',\r\n                        backgroundColor: 'rgba(109, 204, 178, 0.2)',\r\n                        borderColor: 'rgba(109, 204, 178, 0.5)',\r\n                        fill: true,\r\n                        data: [magData[0], magData[1], magData[2], magData[3], magData[4], magData[5], magData[6],magData[7]]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: \"Magnitude breakdown\" },\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n    return (\r\n        <>\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n                {horizontalBarChart}\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                {lineChart}\r\n            </Grid>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction Statistics({ data, dataSource }) {\r\n    const mag = [];\r\n    var x = 0;\r\n\r\n    return (\r\n        !data.length ? <CircularProgress /> : (\r\n            <>\r\n                {/* clean up */}\r\n                <h2>{dataSource}</h2>\r\n                {data.forEach((quake) => {\r\n                    mag[x] = quake.mag;\r\n                    x++;\r\n                })}\r\n                <Chart  mag={mag} />\r\n            </>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Statistics\r\n","import React from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        marginBottom: '30px !important',\r\n    },\r\n    select: {\r\n        backgroundColor: '#1a2430',\r\n        color: 'white',\r\n        width: '40%',\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n        paddingLeft: 20,\r\n        '@media (max-width: 768px)': {\r\n            width: '100%',\r\n          },\r\n    },\r\n    option: {\r\n        backgroundColor: '#1a2430 !important',\r\n        color: 'white',\r\n        paddingLeft: 20,\r\n    }\r\n  }));\r\n\r\nconst Picker = ({ handleMapChange }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n        <NativeSelect className={classes.select} defaultValue=\"all_day\" onChange={(e) => handleMapChange(e.target.value)}>\r\n            <option className={classes.option} value=\"all_hour\">Past Hour</option>\r\n            <option className={classes.option} value=\"all_day\">Past Day</option>)\r\n            <option className={classes.option} value=\"all_week\">Past 7 Days *Slow*</option>)\r\n            <option className={classes.option} value=\"all_month\">Past 30 Days *Slow*</option>)\r\n        </NativeSelect>\r\n    </FormControl>\r\n    )\r\n}\r\n\r\nexport default Picker\r\n","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        margin: '50px 0',\r\n    },\r\n    card: {\r\n        margin: '2% 2% !important',\r\n        backgroundColor: '#1a2430',\r\n        color: 'white',\r\n    },\r\n    total: {\r\n        borderBottom: '20px solid rgba(0,0,255,0.5);',\r\n    },\r\n    smallMag: {\r\n        borderBottom: '20px solid rgba(0,255,0,0.5)',\r\n    },\r\n    mag: {\r\n        borderBottom: '20px solid rgba(255,0,0,0.5)',\r\n    },\r\n    pos: {\r\n        color: 'rgba(255, 255, 255, .5) !important',\r\n    },\r\n    coords: {\r\n        color: 'lightblue',\r\n        '&:hover' : {\r\n            color: 'blue',\r\n        },\r\n    }\r\n  }));\r\n\r\nfunction Cards({ data, display, pos }) {\r\n    const classes = useStyles();\r\n    \r\n    if(data.length === 0) {return <CircularProgress />;}\r\n    if(display === undefined){display = \"all_day\"}\r\n    data.sort(function(a, b) {\r\n        return b.mag - a.mag;\r\n    })\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Grid container spacing={2} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={2} className={cx(classes.card, classes.total)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" className={classes.pos} gutterBottom>Total</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={ data.length } duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" className={classes.pos}>\r\n                            <small>{moment().format('MMMM Do YYYY, h:mm:ss a')}</small>\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">Number of earthquakes this past {display.split(\"_\")[1]}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={2} className={cx(classes.card, classes.smallMag)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" className={classes.pos} gutterBottom>Smallest Earthquake</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={ data[data.length-1].mag } duration={2.5} separator=\",\"  decimals={1} /> \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" className={classes.pos}>\r\n                            <small>{data[data.length-1].time}</small>\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">{data[data.length-1].place}</Typography>\r\n                        <Typography color=\"textSecondary\" className={classes.pos}>\r\n                            <small className={classes.coords} onClick={(e) => pos(data[data.length-1].coordinates[1] + \", \"+ data[data.length-1].coordinates[0])}>\r\n                                {data[data.length-1].coordinates[1]}, {data[data.length-1].coordinates[0]}\r\n                            </small>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={2} className={cx(classes.card, classes.mag)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" className={classes.pos} gutterBottom>Biggest Earthquake</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={ data[0].mag } duration={2.5} separator=\",\"  decimals={1} /> \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" className={classes.pos}>\r\n                            <small>{data[0].time}</small>\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">{data[0].place}</Typography>\r\n                        <Typography color=\"textSecondary\" className={classes.pos}>\r\n                            <small className={classes.coords} onClick={(e) => pos(data[0].coordinates[1]+\", \"+ data[0].coordinates[0])}>\r\n                                {data[0].coordinates[1]}, {data[0].coordinates[0]}\r\n                            </small>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import React, { Component } from 'react'\r\nimport EarthquakeMap from './Map/QuakeMap';\r\nimport { fetchDailyData, fetchData } from '../api/earthquake';\r\nimport Statistics from './Statistics/Statistics';\r\nimport Picker from './Map/Picker';\r\nimport Cards from './Cards/Cards';\r\n\r\nexport class Index extends Component {\r\n    state = {\r\n        dailyData: [],\r\n        mapSelector: \"\",\r\n        mapData: [],\r\n        mapPos: []\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        const fetchedDailyData = await fetchDailyData();\r\n        this.setState({dailyData: fetchedDailyData });\r\n    }\r\n\r\n    handleMapChange = async (mapSelector) => {\r\n        const fetchedData = await fetchData(mapSelector);\r\n        this.setState({mapData: fetchedData, mapSelector: mapSelector});\r\n        this.setState({mapPos: []});\r\n    }\r\n\r\n    handleMapPos = (pos) => {\r\n        this.setState({mapPos: pos.split(\",\")});\r\n    }\r\n    \r\n    render() {\r\n        const { dailyData, mapSelector, mapData, mapPos } = this.state;\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <h1>Earthquake</h1>\r\n                    {!mapData.length ? <Cards data={dailyData} pos={this.handleMapPos} /> : <Cards data={mapData} display={mapSelector} pos={this.handleMapPos} /> }\r\n                    <div className=\"map-container\">\r\n                        <Picker handleMapChange={this.handleMapChange} />\r\n                        <EarthquakeMap  mapData={mapData} mapSelector={mapSelector} pos={mapPos} />\r\n                    </div>\r\n                    {!mapData.length ? <Statistics data={dailyData} dataSource={mapSelector} /> : <Statistics data={mapData} dataSource={mapSelector} /> }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index\r\n","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        margin: '50px 0',\r\n    },\r\n    card: {\r\n        margin: '2% 2% !important',\r\n        backgroundColor: '#1a2430',\r\n        color: 'white',\r\n    },\r\n    infected: {\r\n        borderBottom: '20px solid rgba(0,0,255,0.5);',\r\n    },\r\n    recovered: {\r\n        borderBottom: '20px solid rgba(0,255,0,0.5)',\r\n    },\r\n    deaths: {\r\n        borderBottom: '20px solid rgba(255,0,0,0.5)',\r\n    },\r\n    pos: {\r\n        color: 'rgba(255, 255, 255, .5) !important',\r\n    }\r\n  }));\r\n\r\nfunction Cards({data: { confirmed, recovered, deaths, lastUpdate }}) {\r\n    const classes = useStyles();\r\n\r\n    if(!confirmed) {\r\n        return <CircularProgress />;\r\n    }\r\n    return (\r\n        <div className={classes.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(classes.card, classes.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" className={classes.pos} gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={ confirmed.value } duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" className={classes.pos}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active case of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(classes.card, classes.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" className={classes.pos} gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={ recovered.value } duration={2.5} separator=\",\" /> \r\n                            <small> {(recovered.value / confirmed.value * 100).toFixed(2) + \"%\"}</small>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" className={classes.pos}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recovered cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(classes.card, classes.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" className={classes.pos} gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={ deaths.value } duration={2.5} separator=\",\" /> \r\n                            <small> {(deaths.value / confirmed.value * 100).toFixed(2) + \"%\"}</small>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" className={classes.pos}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n        return { confirmed,recovered,deaths,lastUpdate };\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n      const { data } = await axios.get('https://api.covidtracking.com/v1/us/daily.json');\r\n  \r\n      return data.map(({ positive, recovered, death, dateChecked: date }) => ({ confirmed: positive, recovered, deaths: death, date }));\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchSummary = async () => {\r\n  try {\r\n    const { data } = await axios.get('https://api.covid19api.com/summary');\r\n\r\n    return data.Countries.map(({ Country, CountryCode, Date, TotalConfirmed, TotalDeaths, TotalRecovered, Slug }) =>({ Country, CountryCode, Date, TotalConfirmed, TotalDeaths, TotalRecovered, Slug }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { fetchDailyData } from '../../api/covid';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '60%',\r\n        margin: 'auto',\r\n        '@media (max-width: 768px)': {\r\n            margin: '2% 0 !important',\r\n            width: '100%',\r\n          },\r\n    },\r\n  }));\r\n\r\nconst Chart = ({data: {confirmed, deaths, recovered}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (\r\n            <Line \r\n                data={{\r\n                    labels: dailyData.map(({ date }) => moment(date).add(1, 'days').format(\"YYYY-MM-DD\")),\r\n                    datasets: [{\r\n                        data: dailyData.map(({ confirmed }) => confirmed ),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                    },{\r\n                        data: dailyData.map(({ deaths }) => deaths ),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255,0,0,0.5)',\r\n                        fill: true,\r\n                    },{\r\n                        data: dailyData.map(({recovered}) => recovered),\r\n                        label: 'Recovered',\r\n                        borderColor: 'green',\r\n                        backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n                        fill: true,\r\n                      },],\r\n                }}\r\n            />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: [\r\n                            'rgba(0,0,255,0.5)',\r\n                            'rgba(0,255,0,0.5)',\r\n                            'rgba(255,0,0,0.5)',\r\n                        ],\r\n                        data:[confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text:`Current State in ${country}` },\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {country ? barChart : lineChart }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React, { useState, useEffect } from 'react'\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from '../../api/covid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        marginBottom: '30px !important',\r\n    },\r\n    select: {\r\n        backgroundColor: '#1a2430',\r\n        color: 'white',\r\n        width: '30%',\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n        paddingLeft: 20,\r\n        '@media (max-width: 768px)': {\r\n            width: '100%',\r\n          },\r\n    },\r\n    option: {\r\n        backgroundColor: '#1a2430 !important',\r\n        color: 'white',\r\n        paddingLeft: 20,\r\n    }\r\n  }));\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <NativeSelect className={classes.select} defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option className={classes.option} value=\"\">Not Global</option>\r\n                {fetchedCountries.map((country, i) => <option className={classes.option} key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker\r\n","import React, { useState, useEffect } from 'react'\r\nimport { fetchSummary } from '../../api/covid';\r\n\r\n\r\nfunction ByCountry() {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchSummary());\r\n        }\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    fetchedCountries.sort(function(a, b) {\r\n        return b.TotalConfirmed - a.TotalConfirmed;\r\n    });\r\n\r\n    \r\n    return (\r\n        <div>\r\n \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ByCountry\r\n","import React, { Component } from 'react'\r\nimport Cards from './Cards/Cards';\r\nimport Chart from './Chart/Chart';\r\nimport CountryPicker from './CountryPicker/CountryPicker';\r\nimport ByCountry from './ByCountry/ByCountry';\r\nimport { fetchData } from '../api/covid';\r\n\r\nexport class Index extends Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData });\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({ data: fetchedData, country: country });\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <h1>Covid</h1>\r\n                    <Cards data={data} />\r\n                    <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                    <Chart data={data} country={country} />\r\n                    <ByCountry />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: '50%',\r\n      '@media (max-width: 768px)': {\r\n        maxWidth: '90%',\r\n      },\r\n      color: 'white',\r\n      backgroundColor: '#1a2430',\r\n      textAlign: 'center',\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n      marginTop: 100,\r\n      padding: 20,\r\n    },\r\n    typography: {\r\n        marginBottom: 13,\r\n        textAlign: 'left',\r\n    },\r\n    p: {\r\n        margin: 2\r\n    }\r\n  });\r\n\r\nfunction Index() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <Card className={classes.root}>\r\n                    <CardHeader title=\"About\"  subheader=\"Earthquakes / Covid / And many more!\" />\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" component=\"span\" className={classes.typography}>\r\n                            <h3>Application Info</h3>\r\n                            <p>Version 0.0.1</p>\r\n                            <p className={classes.p}>This application is open source at</p>\r\n                            <p><Link href=\"https://github.com/BraedonPod/dashboard\">https://github.com/BraedonPod/dashboard</Link></p>\r\n\r\n                            <h3>API</h3>\r\n                            <p className={classes.p}><Link href=\"https://earthquake.usgs.gov/earthquakes/feed/v1.0/geojson.php\">Earthquake USGS</Link> - Earthquake API</p>\r\n                            <p className={classes.p}><Link href=\"https://covid19.mathdro.id/api\">mathdro</Link> - Covid API Total/Per Country</p>\r\n                            <p className={classes.p}><Link href=\"https://api.covidtracking.com/v1/us/daily.json\">CovidTracking</Link> - Covid API Daily US Cases</p>\r\n\r\n                            <h3>Libraries & Resources</h3>\r\n                            <p className={classes.p}><Link href=\"#\">React.js</Link> - Frontend Framework</p>\r\n                            <p className={classes.p}><Link href=\"#\">React-Countup</Link> - Counting Animation</p>\r\n                            <p className={classes.p}><Link href=\"#\">React-Chartjs-2</Link> - Charts</p>\r\n                            <p className={classes.p}><Link href=\"#\">React-Router-Dom</Link> - App Navigation</p>\r\n                            <p className={classes.p}><Link href=\"#\">Axios</Link> - Get Requests</p>\r\n                            <p className={classes.p}><Link href=\"#\">Material-ui</Link> - Design</p>\r\n                            <p className={classes.p}><Link href=\"#\">Leaflet</Link> - Map</p>\r\n                            <p className={classes.p}><Link href=\"#\">Moment</Link> - Date/Time format</p>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: '50%',\r\n        '@media (max-width: 768px)': {\r\n            maxWidth: '90%',\r\n        },\r\n        color: 'white',\r\n        backgroundColor: '#1a2430',\r\n        textAlign: 'center',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        marginTop: 100,\r\n        padding: 20,\r\n        '& .MuiOutlinedInput-root': {\r\n            color: 'white',\r\n            marginBottom: 20,\r\n            '& fieldset': {\r\n                borderColor: 'white',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'lightblue',\r\n            },\r\n        },\r\n        '& .MuiFormLabel-root': {\r\n            color: 'rgba(255,255,255,0.5)',\r\n        },\r\n    },\r\n    form: {\r\n        display: 'grid',\r\n    },\r\n    button: {\r\n        backgroundColor: '#0d1219',\r\n        color: 'white',\r\n        '&:hover' : {\r\n            backgroundColor: '#234e8a',\r\n        },\r\n    }\r\n});\r\n\r\nfunction Index() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <Card className={classes.root}>\r\n                    <CardHeader title=\"Contact\" />\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <form noValidate autoComplete=\"off\" className={classes.form}>\r\n                            <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" />\r\n                            <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\r\n                            <TextField id=\"outlined-basic\" label=\"Message\" variant=\"outlined\" />\r\n                            <Button className={classes.button} variant=\"contained\" endIcon={<SendIcon />}>\r\n                                Send\r\n                            </Button>\r\n                        </form>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import React from 'react';\r\n\r\n\r\nfunction Testapp() {\r\n\r\n    return (\r\n        <>\r\n            <h1>TESTING</h1>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Testapp\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#1a2430'\r\n    },\r\n    button: {\r\n      color: 'white'\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    text: {\r\n      color: 'white'\r\n    },\r\n    pos: {\r\n        color: 'white',\r\n        fontSize: 10,\r\n        fontFamily: 'monospace',\r\n        marginBottom: 20,\r\n    },\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: \"auto\"\r\n    },\r\n    divider: {\r\n        backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n    },\r\n    listItem: {\r\n        display: 'block',\r\n        textAlign: 'center',\r\n    },\r\n    navitems: {\r\n        color: 'rgb(169, 169, 169)',\r\n        fontFamily: 'monospace',\r\n        fontSize: 16,\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n    },\r\n    listLink: {\r\n        '&:hover' : {\r\n            backgroundColor: '#0d1219',\r\n            paddingLeft: 40,\r\n        },\r\n    },\r\n    active: {\r\n      '& li': {\r\n        backgroundColor: '#0d1219',\r\n        paddingLeft: 40,\r\n      },\r\n    }\r\n  }));\r\n\r\n\r\nfunction Navbar() {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n      left: false\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n      if (\r\n        event.type === \"keydown\" &&\r\n        (event.key === \"Tab\" || event.key === \"Shift\")\r\n      ) {\r\n        return;\r\n      }\r\n  \r\n      setState({ ...state, [anchor]: open });\r\n    };\r\n  \r\n    const list = (anchor) => (\r\n      <div\r\n        className={classes.list}\r\n        role=\"presentation\"\r\n        onClick={toggleDrawer(anchor, false)}\r\n        onKeyDown={toggleDrawer(anchor, false)}\r\n      >\r\n        <List>\r\n            <ListItem className={classes.listItem}>\r\n              <ListItemText primary=\"Dashboard\" className={classes.text} />\r\n              <ListItemText className={classes.pos} >\r\n                <small>Navigation</small>\r\n              </ListItemText>\r\n            </ListItem>\r\n        </List>\r\n        <Divider className={classes.divider} />\r\n        {/* Make array */}\r\n        <List>\r\n            <NavLink exact to=\"/\" activeClassName={classes.active} className={classes.link}>\r\n                <ListItem className={classes.listLink}>\r\n                <ListItemIcon className={classes.navitems}>\r\n                    <HomeIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Home\" className={classes.navitems} />\r\n                </ListItem>\r\n            </NavLink>\r\n            <NavLink to=\"/earthquake\" activeClassName={classes.active} className={classes.link}>\r\n                <ListItem className={classes.listLink}>\r\n                <ListItemIcon className={classes.navitems}>\r\n                    <PublicIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Earthquake\" className={classes.navitems} />\r\n                </ListItem>\r\n            </NavLink>\r\n            <NavLink to=\"/covid\" activeClassName={classes.active} className={classes.link}>\r\n                <ListItem className={classes.listLink}>\r\n                <ListItemIcon className={classes.navitems}>\r\n                    <BugReportIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Covid\" className={classes.navitems} />\r\n                </ListItem>\r\n            </NavLink>\r\n            <NavLink to=\"/about\" activeClassName={classes.active} className={classes.link}>\r\n                <ListItem className={classes.listLink}>\r\n                <ListItemIcon className={classes.navitems}>\r\n                    <HelpIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"About\" className={classes.navitems} />\r\n                </ListItem>\r\n            </NavLink>\r\n            <NavLink to=\"/contact\" activeClassName={classes.active} className={classes.link}>\r\n                <ListItem className={classes.listLink}>\r\n                <ListItemIcon className={classes.navitems}>\r\n                    <MailIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"contact\" className={classes.navitems} />\r\n                </ListItem>\r\n            </NavLink>\r\n            <Divider />\r\n            <NavLink to=\"/test\" activeClassName={classes.active} className={classes.link}>\r\n                <ListItem className={classes.listLink}>\r\n                <ListItemIcon className={classes.navitems}>\r\n                    <WarningIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Test\" className={classes.navitems} />\r\n                </ListItem>\r\n            </NavLink>\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        <AppBar position=\"static\" className={classes.appBar}>\r\n          <Toolbar>\r\n            {[\"left\"].map((anchor) => (\r\n              <React.Fragment key={anchor}>\r\n                <Button onClick={toggleDrawer(anchor, true)}><MenuIcon className={classes.button} /></Button>\r\n                <Drawer\r\n                  anchor={anchor}\r\n                  open={state[anchor]}\r\n                  onClose={toggleDrawer(anchor, false)}\r\n                >\r\n                  {list(anchor)}\r\n                </Drawer>\r\n              </React.Fragment>\r\n            ))}\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Dashboard\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport Earthquake from './components/earthquake/Index';\nimport Covid from './components/covid/Index';\nimport About from './components/about/Index';\nimport Contact from './components/contact/Index';\nimport Testapp from './Testapp';\nimport Navbar from './components/layout/Navbar';\n\nReactDOM.render(\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route path=\"/earthquake\">\n          <Earthquake />\n        </Route>\n        <Route path=\"/covid\">\n          <Covid />\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/contact\">\n          <Contact />\n        </Route>\n        <Route path=\"/test\">\n          <Testapp />\n        </Route>\n      </Switch>\n    </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}